// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model users {
  id        String   @id @default(uuid())
  roleId    String?
  fullname  String
  username  String   @unique
  password  String
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles roles? @relation(fields: [roleId], references: [id])
}

model roles {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     users[]
}

model racks {
  id        String   @id @default(uuid())
  rack      String
  floor     Int
  location  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model equipments {
  id           String         @id @default(uuid())
  hostname     String?
  brand        String
  type         String
  serialnumber String
  function     String?
  category     String?
  group        String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  maintenances maintenances[]
}

model maintenances {
  id          String      @id @default(uuid())
  equipmentId String?
  status      String?
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  equipment   equipments? @relation(fields: [equipmentId], references: [id])
}